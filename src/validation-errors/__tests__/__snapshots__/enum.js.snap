// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Enum when value is a primitive prints correctly for empty value 1`] = `
[
  "<red><bold>ENUM</intensity></color><red> should be equal to one of the allowed values</color>",
  "<red>(foo, bar)</color>
",
  "> 1 | "baz"
    | ^^^^^ Did you mean <brightMagenta>bar</color> here?",
]
`;

exports[`Enum when value is a primitive prints correctly for enum prop 1`] = `
[
  "<red><bold>ENUM</intensity></color><red> should be equal to one of the allowed values</color>",
  "<red>(foo, bar)</color>
",
  "> 1 | "baz"
    | ^^^^^ Did you mean <brightMagenta>bar</color> here?",
]
`;

exports[`Enum when value is a primitive prints correctly for no levenshtein match 1`] = `
[
  "<red><bold>ENUM</intensity></color><red> should be equal to one of the allowed values</color>",
  "<red>(one, two)</color>
",
  "> 1 | "baz"
    | ^^^^^ Unexpected value, should be equal to one of the allowed values",
]
`;

exports[`Enum when value is an object prints correctly for empty value 1`] = `
[
  "<red><bold>ENUM</intensity></color><red> should be equal to one of the allowed values</color>",
  "<red>(foo, bar)</color>
",
  "  1 | {
> 2 |   "id": "baz"
    |         ^^^^^ Did you mean <brightMagenta>bar</color> here?
  3 | }",
]
`;

exports[`Enum when value is an object prints correctly for enum prop 1`] = `
[
  "<red><bold>ENUM</intensity></color><red> should be equal to one of the allowed values</color>",
  "<red>(foo, bar)</color>
",
  "  1 | {
> 2 |   "id": "baz"
    |         ^^^^^ Did you mean <brightMagenta>bar</color> here?
  3 | }",
]
`;

exports[`Enum when value is an object prints correctly for no levenshtein match 1`] = `
[
  "<red><bold>ENUM</intensity></color><red> should be equal to one of the allowed values</color>",
  "<red>(one, two)</color>
",
  "  1 | {
> 2 |   "id": "baz"
    |         ^^^^^ Unexpected value, should be equal to one of the allowed values
  3 | }",
]
`;
