// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Enum when value is a primitive prints correctly for empty value 1`] = `
Array [
  "<red><bold>ENUM</></><red> should be equal to one of the allowed values</>",
  "<red>(foo, bar)</>
",
  "</><red><bold>></></><gray> 1 |</> <green>\\"baz\\"</></>
</> <gray>   |</> <red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></> <red><bold>👈🏽  Did you mean bar<red> here?</></></>",
]
`;

exports[`Enum when value is a primitive prints correctly for enum prop 1`] = `
Array [
  "<red><bold>ENUM</></><red> should be equal to one of the allowed values</>",
  "<red>(foo, bar)</>
",
  "</><red><bold>></></><gray> 1 |</> <green>\\"baz\\"</></>
</> <gray>   |</> <red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></> <red><bold>👈🏽  Did you mean bar<red> here?</></></>",
]
`;

exports[`Enum when value is a primitive prints correctly for no levenshtein match 1`] = `
Array [
  "<red><bold>ENUM</></><red> should be equal to one of the allowed values</>",
  "<red>(one, two)</>
",
  "</><red><bold>></></><gray> 1 |</> <green>\\"baz\\"</></>
</> <gray>   |</> <red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></> <red><bold>👈🏽  Unexpected value, should be equal to one of the allowed values</></></>",
]
`;

exports[`Enum when value is an object prints correctly for empty value 1`] = `
Array [
  "<red><bold>ENUM</></><red> should be equal to one of the allowed values</>",
  "<red>(foo, bar)</>
",
  "</> <gray> 1 |</> {</>
</><red><bold>></></><gray> 2 |</>   <green>\\"id\\"</><yellow>:</> <green>\\"baz\\"</></>
</> <gray>   |</>         <red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></> <red><bold>👈🏽  Did you mean bar<red> here?</></></>
</> <gray> 3 |</> }</>",
]
`;

exports[`Enum when value is an object prints correctly for enum prop 1`] = `
Array [
  "<red><bold>ENUM</></><red> should be equal to one of the allowed values</>",
  "<red>(foo, bar)</>
",
  "</> <gray> 1 |</> {</>
</><red><bold>></></><gray> 2 |</>   <green>\\"id\\"</><yellow>:</> <green>\\"baz\\"</></>
</> <gray>   |</>         <red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></> <red><bold>👈🏽  Did you mean bar<red> here?</></></>
</> <gray> 3 |</> }</>",
]
`;

exports[`Enum when value is an object prints correctly for no levenshtein match 1`] = `
Array [
  "<red><bold>ENUM</></><red> should be equal to one of the allowed values</>",
  "<red>(one, two)</>
",
  "</> <gray> 1 |</> {</>
</><red><bold>></></><gray> 2 |</>   <green>\\"id\\"</><yellow>:</> <green>\\"baz\\"</></>
</> <gray>   |</>         <red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></><red><bold>^</></> <red><bold>👈🏽  Unexpected value, should be equal to one of the allowed values</></></>
</> <gray> 3 |</> }</>",
]
`;
